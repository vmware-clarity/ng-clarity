name: Release
on:
  workflow_dispatch:
jobs:
  release:
    name: Release
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: Public Api Check
        run: npm run public-api:check
      - name: Release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        run: npx semantic-release
      - name: BlackDuck Scan Release
        env:
          NEXT_RELEASE_VERSION: ${{ env.NEXT_RELEASE_VERSION }}
          BD_PROJECT_NAME: ${{ secrets.BD_PROJECT_NAME }}
          BD_URL: ${{ secrets.BD_URL }}
          BD_ACCESS_TOKEN: ${{ secrets.BD_ACCESS_TOKEN }}
        run: bash <(curl -k -s -L https://detect.blackduck.com/detect10.sh) /
          --blackduck.url=$BD_URL /
          --blackduck.api.token=$BD_ACCESS_TOKEN /
          --detect.project.name="$BD_PROJECT_NAME" /
          --detect.project.version.name="$NEXT_RELEASE_VERSION" /
          --detect.project.version.update=true /
          --detect.project.version.phase=RELEASED /
          --detect.project.version.license="MIT License" /
          --detect.project.version.distribution=OPENSOURCE /
          --detect.tools=DETECTOR /
          --detect.wait.for.results=true /
          --detect.included.detector.types=npm /
          --detect.required.detector.types=npm /
          --detect.detector.search.depth=6 /
          --detect.npm.dependency.types.excluded=DEV
      - name: Deploy Docs
        continue-on-error: true
        timeout-minutes: 5
        env:
          NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}
        run: npx netlify-cli deploy --site storybook-clarity-design $([[ $GITHUB_REF_NAME == "main" ]] && echo "--prod")
