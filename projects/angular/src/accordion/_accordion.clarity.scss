/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:meta';
@use '../utils/a11y';
@use '../utils/mixins';
@use '../utils/variables/variables.global';
@use 'variables.accordion' as accordion-variables;
@include meta.load-css('properties.accordion');

@include mixins.exports('accordion.clarity') {
  .clr-accordion {
    display: block;
    margin-bottom: variables.$clr_baselineRem_1;
  }

  .clr-accordion-panel {
    display: block;
  }

  .clr-accordion-header {
    $box-shadow-default: inset accordion-variables.$clr-accordion-border-left-width 0 0
      accordion-variables.$clr-accordion-border-left-color;
    @include mixins.css-var(
      color,
      clr-accordion-text-color,
      accordion-variables.$clr-accordion-text-color,
      variables.$clr-use-custom-properties
    );
    border: variables.$clr_baselineRem_1px solid;
    @include mixins.css-var(
      border-color,
      clr-accordion-border-color,
      accordion-variables.$clr-accordion-border-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      box-shadow,
      clr-accordion-header-left-indicator,
      $box-shadow-default,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      background,
      clr-accordion-header-background-color,
      accordion-variables.$clr-accordion-header-background-color,
      variables.$clr-use-custom-properties
    );
    transition: all 200ms ease-in-out;
    border-bottom: 0;
    width: 100%;
    @include mixins.css-var(
      font-size,
      clr-accordion-header-font-size,
      variables.$clr_baselineRem_0_65,
      variables.$clr-use-custom-properties
    );
    text-align: left;

    &:hover {
      @include mixins.css-var(
        color,
        clr-accordion-text-color-hover,
        accordion-variables.$clr-accordion-text-color-hover,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        background-color,
        clr-accordion-header-hover-background-color,
        accordion-variables.$clr-accordion-header-hover-background-color,
        variables.$clr-use-custom-properties
      );
    }

    &:active {
      @include mixins.css-var(
        color,
        clr-accordion-text-color-active,
        accordion-variables.$clr-accordion-text-color-active,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        background-color,
        clr-accordion-header-active-background-color,
        accordion-variables.$clr-accordion-header-active-background-color,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-panel-disabled > div > & {
      @include mixins.css-var(
        background-color,
        clr-accordion-header-background-color,
        accordion-variables.$clr-accordion-header-background-color,
        variables.$clr-use-custom-properties
      );

      &:hover,
      &:active {
        @include mixins.css-var(
          background-color,
          clr-accordion-header-background-color,
          accordion-variables.$clr-accordion-header-background-color,
          variables.$clr-use-custom-properties
        );
      }
    }

    .clr-accordion-panel-disabled > .clr-accordion-panel-open > & {
      @include mixins.css-var(
        background-color,
        clr-accordion-header-disabled-background-color,
        accordion-variables.$clr-accordion-header-disabled-background-color,
        variables.$clr-use-custom-properties
      );

      &:hover,
      &:active {
        @include mixins.css-var(
          background-color,
          clr-accordion-header-disabled-background-color,
          accordion-variables.$clr-accordion-header-disabled-background-color,
          variables.$clr-use-custom-properties
        );
      }
    }
  }

  .clr-accordion-panel:last-child {
    .clr-accordion-content,
    .clr-accordion-header {
      border-bottom-style: solid;
      @include mixins.css-var(
        border-bottom-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-bottom-color,
        clr-accordion-border-color,
        accordion-variables.$clr-accordion-border-color,
        variables.$clr-use-custom-properties
      );
    }
  }

  .clr-accordion-number {
    @include mixins.css-var(
      padding,
      clr-accordion-number-padding,
      0 accordion-variables.$clr-accordion-padding,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-weight,
      clr-accordion-step-title-font-weight,
      accordion-variables.$clr-accordion-step-title-font-weight,
      variables.$clr-use-custom-properties
    );
    display: none;
  }

  .clr-accordion-header-button {
    display: flex;
    flex-flow: row wrap;
    flex: 1 1 0;
    width: 100%;
    border: 0;
    padding: accordion-variables.$clr-accordion-padding;
    background: transparent;
    text-align: left;
    cursor: pointer;
    color: inherit;
    @include mixins.css-var(gap, clr-accordion-header-gap, 0, variables.$clr-use-custom-properties);
    @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
      flex-flow: row;
    }

    &:disabled {
      cursor: not-allowed;

      .clr-accordion-status,
      .clr-accordion-title {
        @include mixins.css-var(
          color,
          clr-accordion-panel-disabled-color,
          accordion-variables.$clr-accordion-panel-disabled-color,
          variables.$clr-use-custom-properties
        );
      }
    }
  }

  .clr-accordion-status {
    width: variables.$clr_baselineRem_1_5;
    display: inline-block;
    vertical-align: top;
  }

  .clr-accordion-title {
    display: inline-block;
  }

  clr-step-title.clr-accordion-title {
    @include mixins.css-var(
      font-weight,
      clr-accordion-step-title-font-weight,
      accordion-variables.$clr-accordion-step-title-font-weight,
      variables.$clr-use-custom-properties
    );
    @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
      @include mixins.css-var(
        min-width,
        clr-accordion-step-title-min-width,
        accordion-variables.$clr-accordion-step-title-min-width,
        variables.$clr-use-custom-properties
      );
    }
  }

  .clr-accordion-header-has-description {
    .clr-accordion-title {
      max-width: variables.$clr_baselineRem_11;
      @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
        @include mixins.css-var(
          margin-left,
          clr-accordion-step-title-margin-left,
          accordion-variables.$clr-accordion-step-title-margin-left,
          variables.$clr-use-custom-properties
        );
      }
    }
  }

  .clr-accordion-description {
    display: inline-block;
    max-width: variables.$clr_baselineRem_650px;

    @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
      @include mixins.css-var(
        margin-left,
        clr-accordion-description-margin-left,
        accordion-variables.$clr-accordion-description-margin-left,
        variables.$clr-use-custom-properties
      );
    }
  }

  .clr-accordion-content {
    @include mixins.css-var(
      background,
      clr-accordion-content-background-color,
      accordion-variables.$clr-accordion-content-background-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-accordion-border-color,
      accordion-variables.$clr-accordion-border-color,
      variables.$clr-use-custom-properties
    );
    border-bottom: 0;
    overflow: hidden;
    padding: variables.$clr_baselineRem_0_75;
    display: none;

    .clr-form {
      padding: 0;
    }

    &.ng-trigger {
      padding: 0; // inner element/padding to prevent extra hight in ng animation
    }

    @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
      padding: variables.$clr_baselineRem_0_75 variables.$clr_baselineRem_2_25;
    }
  }

  .clr-accordion-inner-content {
    padding: accordion-variables.$clr-accordion-padding;

    @media (min-width: accordion-variables.$clr-accordion-responsive-breakpoint) {
      padding: variables.$clr_baselineRem_0_75 variables.$clr_baselineRem_2_25;
    }
  }

  .clr-accordion-angle {
    transition: all 200ms ease-in-out;
    transform: rotate(90deg);
  }

  .clr-accordion-error-icon,
  .clr-accordion-complete-icon {
    @include mixins.equilateral(variables.$clr_baselineRem_1);
    display: none;
    padding: 0;
    margin: 0 variables.$clr_baselineRem_0_5;
  }

  // panel states
  .clr-accordion-panel-open {
    .clr-accordion-header {
      $box-shadow: inset accordion-variables.$clr-accordion-border-left-width 0 0
        accordion-variables.$clr-accordion-border-left-current-color;
      @include mixins.css-var(
        box-shadow,
        clr-accordion-header-left-current-indicator,
        $box-shadow,
        variables.$clr-use-custom-properties
      );
    }
    .clr-accordion-panel-complete {
      .clr-accordion-header {
        $box-shadow: inset accordion-variables.$clr-accordion-border-left-width 0 0
          accordion-variables.$clr-accordion-border-left-color-complete;
        @include mixins.css-var(
          box-shadow,
          clr-accordion-header-left-complete-indicator,
          $box-shadow,
          variables.$clr-use-custom-properties
        );
      }
    }
    .clr-accordion-panel-error {
      .clr-accordion-header {
        $box-shadow: inset accordion-variables.$clr-accordion-border-left-width 0 0
          accordion-variables.$clr-accordion-border-left-color-error;
        @include mixins.css-var(
          box-shadow,
          clr-accordion-header-left-error-indicator,
          $box-shadow,
          variables.$clr-use-custom-properties
        );
      }
    }

    & > .clr-accordion-content-region .clr-accordion-content {
      display: block;
    }

    & > .clr-accordion-header {
      @include mixins.css-var(
        background,
        clr-accordion-active-background-color,
        accordion-variables.$clr-accordion-active-background-color,
        variables.$clr-use-custom-properties
      );

      &:active {
        @include mixins.css-var(
          color,
          clr-accordion-text-color-active,
          accordion-variables.$clr-accordion-text-color-active,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          background-color,
          clr-accordion-header-active-background-color,
          accordion-variables.$clr-accordion-header-active-background-color,
          variables.$clr-use-custom-properties
        );
      }

      .clr-accordion-angle {
        visibility: visible;
        transform: rotate(180deg);
      }
    }
  }

  .clr-accordion-panel-complete {
    .clr-accordion-complete-icon {
      display: inline-block;
      @include mixins.css-var(
        color,
        clr-accordion-complete-color,
        accordion-variables.$clr-accordion-complete-color,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-angle {
      visibility: visible;
    }

    .clr-accordion-header {
      $box-shadow: inset accordion-variables.$clr-accordion-border-left-width 0 0
        accordion-variables.$clr-accordion-border-left-color-complete;
      @include mixins.css-var(
        box-shadow,
        clr-accordion-header-left-complete-indicator,
        $box-shadow,
        variables.$clr-use-custom-properties
      );
    }

    .ng-trigger.clr-accordion-content {
      display: block;
    }
  }

  .clr-accordion-panel-error {
    .clr-accordion-header {
      $box-shadow: inset accordion-variables.$clr-accordion-border-left-width 0 0
        accordion-variables.$clr-accordion-border-left-color-error;
      border-bottom: variables.$clr-global-borderwidth solid;
      @include mixins.css-var(
        border-color,
        clr-accordion-border-left-color-error,
        accordion-variables.$clr-accordion-border-left-color-error,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        box-shadow,
        clr-accordion-header-left-error-indicator,
        $box-shadow,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        background-color,
        clr-accordion-active-background-color,
        accordion-variables.$clr-accordion-active-background-color,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-error-icon {
      display: inline-block;
      @include mixins.css-var(
        color,
        clr-accordion-error-color,
        accordion-variables.$clr-accordion-error-color,
        variables.$clr-use-custom-properties
      );
    }
  }

  .clr-accordion-panel-error .clr-accordion-number,
  .clr-accordion-panel-complete .clr-accordion-number {
    @include a11y.screen-reader-only();
  }

  // temporary overrides to match stackview until stepper, accordion and stackview are aligned
  // https://github.com/vmware/clarity/issues/3471
  .clr-accordion:not(.clr-stepper-forms) {
    .clr-accordion-header {
      box-shadow: none;
    }

    .clr-accordion-panel:first-child .clr-accordion-header {
      @include mixins.css-var(
        border-top-left-radius,
        clr-accordion-border-radius,
        accordion-variables.$clr-accordion-border-radius,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-top-right-radius,
        clr-accordion-border-radius,
        accordion-variables.$clr-accordion-border-radius,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-panel:last-child {
      .clr-accordion-content,
      .clr-accordion-header {
        @include mixins.css-var(
          border-bottom-left-radius,
          clr-accordion-border-radius,
          accordion-variables.$clr-accordion-border-radius,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-bottom-right-radius,
          clr-accordion-border-radius,
          accordion-variables.$clr-accordion-border-radius,
          variables.$clr-use-custom-properties
        );
      }
    }

    .clr-accordion-title {
      @include mixins.css-var(font-weight, clr-accordion-title-font-weight, 500, variables.$clr-use-custom-properties);
      @include mixins.css-var(
        font-size,
        clr-accordion-title-font-size,
        variables.$clr_baselineRem_0_5416,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-header-button {
      @include mixins.css-var(
        font-size,
        clr-accordion-header-button-font-size,
        variables.$clr_baselineRem_0_5,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        padding,
        clr-accordion-header-button-padding,
        variables.$clr_baselineRem_0_25 variables.$clr_baselineRem_0_5,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        line-height,
        clr-accordion-header-button-line-height,
        variables.$clr_baselineRem_1,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-content {
      padding: 0;
    }

    .clr-accordion-inner-content {
      @include mixins.css-var(
        padding,
        clr-accordion-content-padding,
        variables.$clr_baselineRem_0_25 variables.$clr_baselineRem_1_4583,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        color,
        clr-accordion-content-color,
        accordion-variables.$clr-accordion-content-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        font-size,
        clr-accordion-content-font-size,
        accordion-variables.$clr-accordion-content-font-size,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-status {
      @include mixins.css-var(
        width,
        clr-accordion-status-icon-width,
        variables.$clr_baselineRem_0_8,
        variables.$clr-use-custom-properties
      );

      cds-icon,
      clr-icon {
        @include mixins.equilateral(variables.$clr_baselineRem_0_583);
      }
    }
  }

  // override the border bottom style when last panel is open
  .clr-accordion-panel-open > .clr-accordion-header {
    border-bottom-left-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
    border-bottom: 0 !important;
  }

  // stepper forms mode
  .clr-stepper-forms {
    .clr-accordion-panel-inactive .clr-accordion-angle {
      visibility: hidden;
    }

    .clr-accordion-panel-open > .clr-accordion-header .clr-accordion-angle {
      visibility: visible;
    }

    .clr-accordion-status {
      min-width: variables.$clr_baselineRem_3;
      @include mixins.css-var(
        margin-left,
        clr-accordion-step-status-margin-left,
        accordion-variables.$clr-accordion-step-status-margin-left,
        variables.$clr-use-custom-properties
      );
    }

    .clr-accordion-number {
      display: inline-block;
    }
  }

  .clr-step-button {
    display: block;
    margin-top: variables.$clr_baselineRem_1;
  }
}
