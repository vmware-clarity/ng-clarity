/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use '../variables.buttons' as button-variables;

@mixin square-off-btngroup-btns($dir: left) {
  border-top-#{$dir}-radius: 0;
  border-bottom-#{$dir}-radius: 0;
}

@include mixins.exports('button-group.clarity') {
  .btn-group {
    display: inline-flex;
    margin-right: variables.$clr_baselineRem_0_5;

    clr-dropdown {
      .dropdown-toggle {
        @include square-off-btngroup-btns(left);
        @include square-off-btngroup-btns(right);
      }

      &:last-child {
        .dropdown-toggle {
          border-top-right-radius: button-variables.$clr-btn-border-radius;
          border-bottom-right-radius: button-variables.$clr-btn-border-radius;
        }
      }
    }

    .btn {
      margin: 0;
      vertical-align: top;
      overflow: hidden;

      label {
        height: 100%;
      }

      input[type='radio']:focus,
      input[type='checkbox']:focus {
        $outline-shadow: 0 0 variables.$clr_baselineRem_5px
          var(--clr-btn-group-focus-outline, button-variables.$clr-btn-group-focus-outline);
        $ie-outline-shadow: 0 0 variables.$clr_baselineRem_5px button-variables.$clr-btn-group-focus-outline;
        appearance: none;
        opacity: 1;
        top: 0;
        @include mixins.equilateral(100%);
        box-shadow: $ie-outline-shadow;
        box-shadow: $outline-shadow;
        padding: variables.$clr_baselineRem_3px 0 variables.$clr_baselineRem_3px variables.$clr_baselineRem_3px;
        border-width: variables.$clr_baselineRem_1px;
        border-style: solid;
        @include mixins.css-var(
          border-color,
          clr-btn-group-focus-outline,
          button-variables.$clr-btn-group-focus-outline,
          variables.$clr-use-custom-properties
        );

        &::-ms-check {
          display: none;
        }
      }
    }

    .btn {
      &:not(:first-child) {
        @include square-off-btngroup-btns(left);
      }

      &:not(:last-child) {
        @include square-off-btngroup-btns(right);
      }
    }

    .tooltip {
      &:not(:first-child) .btn {
        @include square-off-btngroup-btns(left);
      }

      &:not(:last-child) .btn {
        @include square-off-btngroup-btns(right);
      }
    }

    // ATM (after token migration)
    // once shim is fully integrated all rules to be replaced with
    // &:not([class*='-outline'])
    &.btn-primary,
    &.btn-success,
    &.btn-danger,
    &.btn-warning {
      .tooltip:not(:last-child) .btn,
      .btn:not(:last-child) {
        margin: 0;
        @include mixins.css-var(
          margin-right,
          clr-btn-border-width,
          button-variables.$clr-btn-border-width,
          variables.$clr-use-custom-properties
        );
      }
    }

    //I couldn't reduce the nesting here :-(
    //TODO: Try to reduce the nesting here later.
    &.btn-primary .dropdown-menu .btn,
    &.btn-success .dropdown-menu .btn,
    &.btn-danger .dropdown-menu .btn,
    &.btn-warning .dropdown-menu .btn {
      margin: 0;
    }

    > .btn-group-overflow {
      position: relative;
    }

    > .btn-group-overflow:last-child:not(:first-child) > .btn:first-child {
      @include mixins.css-var(
        border-radius,
        clr-btn-border-radius,
        button-variables.$clr-btn-border-radius,
        variables.$clr-use-custom-properties
      );
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    > .btn-group-overflow:last-child:first-child > .btn:first-child {
      @include mixins.css-var(
        border-radius,
        clr-btn-border-radius,
        button-variables.$clr-btn-border-radius,
        variables.$clr-use-custom-properties
      );
    }

    //To avoid double borders
    .btn + .btn {
      border-left: none;
    }

    .tooltip:not(:first-child) .btn {
      border-left: none;
    }

    .btn + .btn-group-overflow {
      .btn {
        border-left: none;
      }
    }

    //Flat Buttons
    &.btn-link .dropdown-toggle {
      min-width: 0;
    }

    //Flat Icon Buttons
    &.btn-icon-link {
      &.btn-link .btn {
        min-width: 0;
      }
    }

    //Flat Icon Buttons All
    &.btn-icon {
      .btn {
        min-width: 0;
      }
    }

    //Icons and their corresponding title
    .clr-icon-title {
      display: none;
      text-transform: none;
    }

    .dropdown-toggle {
      display: block;
    }

    .dropdown-menu {
      cds-icon,
      clr-icon {
        display: none;
      }

      .clr-icon-title {
        display: inline;
      }
    }
  }

  // @deprecated last of deprecated forms CSS to keep btn groups working
  // should be removed when btn is revamped with clr- naming conventions
  .checkbox,
  .radio {
    position: relative;

    input[type='checkbox'],
    input[type='radio'] {
      position: absolute;
      top: 0;
      left: 0;
      @include mixins.equilateral(0);
      opacity: 0;
    }
  }

  .card-footer {
    .checkbox,
    .radio {
      &.btn label {
        line-height: variables.$clr_baselineRem_1 - variables.$clr_baselineRem_1px;
      }
    }
  }

  .dropdown-menu.clr-button-group-menu {
    visibility: visible;
  }
}
