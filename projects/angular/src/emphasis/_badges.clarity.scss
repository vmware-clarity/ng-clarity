/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:meta';
@use '../utils/mixins';
@use '../utils/variables/variables.global';
@use 'variables.badges' as badges-variables;
@use 'variables.label' as label-variables;
@include meta.load-css('properties.badges');

@mixin generateBadgeStyles($color: gray, $alias: 1) {
  &.badge-#{'' + $color},
  &.badge-#{$alias} {
    @include mixins.css-var(
      background,
      badges-variables.getBadgeColor($color, bg-color, 'css-var'),
      badges-variables.getBadgeColor($color, bg-color),
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      color,
      badges-variables.getBadgeColor($color, color, 'css-var'),
      badges-variables.getBadgeColor($color, color),
      variables.$clr-use-custom-properties
    );
  }
}

@mixin generateStatusBadgeStyles($status: info) {
  &.badge-#{$status} {
    @include mixins.css-var(
      background,
      badges-variables.getBadgeColor($status, bg-color, 'css-var'),
      badges-variables.getBadgeColor($status, bg-color),
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      color,
      badges-variables.getBadgeColor($status, color, 'css-var'),
      badges-variables.getBadgeColor($status, color),
      variables.$clr-use-custom-properties
    );
  }
}

@include mixins.exports('badges.clarity') {
  //NOTE: Had to use inline-flex, reset line-height to normal, and had to use change a few values
  //instead of using our baselineRem function. This was done to achieve the desired look
  //and to align this with our vertical baseline. Not sure why but aligning inline-blocks within inline-blocks
  //is a bit tricky. I initially used display: inline-block but I wasn't able to align the badges properly.
  //TODO: I still am unable to align the badges center of the baseline but have managed to aligned it to the
  //bottom. There are no margins which are influencing this. Need to figure out whats the issue.
  .badge {
    display: inline-flex;
    vertical-align: middle;
    align-items: center;
    justify-content: center;
    @include mixins.css-var(
      min-width,
      clr-badge-min-width,
      variables.$clr_baselineRem_0_625,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      background-color,
      clr-badge-background-color,
      label-variables.getLabelColor(gray, bg-color),
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      height,
      clr-badge-height,
      variables.$clr_baselineRem_0_625,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-radius,
      clr-badge-border-radius,
      variables.$clr_baselineRem_0_416,
      variables.$clr-use-custom-properties
    );

    @include mixins.css-var(
      font-size,
      clr-badge-font-size,
      variables.$clr_baselineRem_0_416,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(font-weight, clr-badge-font-weight, inherit, variables.$clr-use-custom-properties);
    @include mixins.css-var(letter-spacing, clr-badge-letter-spacing, inherit, variables.$clr-use-custom-properties);
    @include mixins.css-var(line-height, clr-badge-line-height, normal, variables.$clr-use-custom-properties);

    @include mixins.css-var(
      padding,
      clr-badge-padding,
      0 variables.$clr_baselineRem_4px,
      variables.$clr-use-custom-properties
    );
    margin-right: variables.$clr_baselineRem_0_25;
    white-space: nowrap;
    text-align: center;
    @include mixins.css-var(
      color,
      clr-badge-color,
      badges-variables.$clr-badge-font-color-light,
      variables.$clr-use-custom-properties
    );

    &:visited {
      @include mixins.css-var(
        color,
        clr-badge-color,
        badges-variables.$clr-badge-font-color-light,
        variables.$clr-use-custom-properties
      );
    }

    // Link badge, default, no color or type specifier. Override a:link setting.
    &:link {
      @include mixins.css-var(
        background-color,
        badges-variables.getBadgeColor(gray, bg-color, 'css-var'),
        badges-variables.getBadgeColor(gray, bg-color),
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        color,
        badges-variables.getBadgeColor(gray, color, 'css-var'),
        badges-variables.getBadgeColor(gray, color),
        variables.$clr-use-custom-properties
      );
    }

    @include generateBadgeStyles(gray, 1);
    @include generateBadgeStyles(purple, 2);
    @include generateBadgeStyles(blue, 3);
    @include generateBadgeStyles(orange, 4);
    @include generateBadgeStyles(light-blue, 5);

    @include generateStatusBadgeStyles(info);
    @include generateStatusBadgeStyles(success);
    @include generateStatusBadgeStyles(danger);
    @include generateStatusBadgeStyles(warning);
  }

  @include mixins.fixForIE10AndUp {
    .badge {
      padding: variables.$clr_baselineRem_2px variables.$clr_baselineRem_0_125 0;
    }
  }

  @include mixins.fixForMsEdge {
    .badge {
      padding: variables.$clr_baselineRem_2px variables.$clr_baselineRem_0_125 0;
    }
  }
}
