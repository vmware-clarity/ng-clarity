/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use '../../emphasis/alert/variables.alert' as alert-variables;
@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use 'mixins.forms' as forms-mixins;
@use 'variables.forms' as forms-variables;

@include mixins.exports('forms.checkbox') {
  $mark-half-size: forms-variables.$clr-forms-checkbox-mark-size * 0.5;

  // @TODO un-nest the checkbox from the wrapper, after old forms are removed
  .clr-checkbox-wrapper {
    @include forms-mixins.form-flatten-validate-text();
    position: relative;
    display: flex;

    .clr-control-label {
      @include forms-mixins.checkbox-radio-label-styles(
        clr-forms-checkbox-label-height,
        forms-variables.$clr-forms-checkbox-label-height,
        clr-forms-checkbox-padding-left,
        forms-variables.$clr-forms-checkbox-padding-left,
        clr-forms-checkbox-line-height,
        forms-variables.$clr-forms-icon-size,
        forms-variables.$clr-forms-checkbox-label-color,
        clr-forms-checkbox-label-color
      );
    }

    //Hide the default checkbox behind the pseudo elements
    //Opacity is set to 0 so that the input remains accessible
    input[type='checkbox'] {
      @include forms-mixins.checkbox-radio-input-styles(forms-variables.$clr-forms-checkbox-size);
    }

    //Checkbox base
    input[type='checkbox'] + .clr-control-label::before {
      @include forms-mixins.checkbox-radio-shared-inactive(
        forms-variables.$clr-forms-checkbox-height,
        forms-variables.$clr-forms-checkbox-top,
        0,
        forms-variables.$clr-forms-border-color,
        clr-forms-border-color
      );
      @include mixins.css-var(
        border-radius,
        clr-forms-checkbox-border-radius,
        forms-variables.$clr-forms-checkbox-border-radius,
        variables.$clr-use-custom-properties
      );
    }

    input[type='checkbox']:focus + .clr-control-label::before {
      @include mixins.include-outline-style-form-fields();
    }

    //Checkmark
    input[type='checkbox'] + .clr-control-label::after {
      position: absolute;
      content: '';
      display: none;
      height: $mark-half-size + variables.$clr_baselineRem_1px;
      width: forms-variables.$clr-forms-checkbox-mark-size;
      border-left: forms-variables.$clr-forms-checkbox-mark-border-size solid;
      border-bottom: forms-variables.$clr-forms-checkbox-mark-border-size solid;
      @include mixins.css-var(
        border-color,
        clr-forms-checkbox-mark-color,
        forms-variables.$clr-forms-checkbox-mark-color,
        variables.$clr-use-custom-properties
      );
      top: (forms-variables.$clr-forms-baseline * 4 - alert-variables.$clr-icon-dimension-sm) * 0.5;
      left: $mark-half-size;
      transform: translate(0, $mark-half-size) rotate(-45deg);
    }

    input[type='checkbox']:checked + .clr-control-label::before {
      @include mixins.css-var(
        background,
        clr-forms-checkbox-background-color,
        forms-variables.$clr-forms-checkbox-background-color,
        variables.$clr-use-custom-properties
      );
      border: none;
    }

    input[type='checkbox']:checked + .clr-control-label::after {
      display: inline-block;
    }

    input[type='checkbox'].clr-indeterminate + .clr-control-label::before,
    input[type='checkbox']:indeterminate + .clr-control-label::before {
      border: variables.$clr-global-borderwidth solid;
      @include mixins.css-var(
        border-color,
        clr-forms-checkbox-indeterminate-border-color,
        forms-variables.$clr-forms-checkbox-indeterminate-border-color,
        variables.$clr-use-custom-properties
      );
    }

    input[type='checkbox'].clr-indeterminate + .clr-control-label::after,
    input[type='checkbox']:indeterminate + .clr-control-label::after {
      border-left: none;
      @include mixins.css-var(
        border-bottom-color,
        clr-forms-checkbox-indeterminate-border-color,
        forms-variables.$clr-forms-checkbox-indeterminate-border-color,
        variables.$clr-use-custom-properties
      );
      display: inline-block;
      transform: translate(0, $mark-half-size);
    }

    &.clr-checkbox-inline {
      @include forms-mixins.form-inline-input();
    }
  }

  .clr-error .clr-checkbox-wrapper input[type='checkbox'] + .clr-control-label::before {
    @include mixins.css-var(
      border-color,
      clr-forms-invalid-color,
      forms-variables.$clr-forms-invalid-color,
      variables.$clr-use-custom-properties
    );
  }

  .clr-form-control-disabled .clr-checkbox-wrapper {
    .clr-control-label {
      cursor: not-allowed;

      @include mixins.css-var(
        color,
        clr-forms-label-disabled-color,
        forms-variables.$clr-forms-label-disabled-color,
        variables.$clr-use-custom-properties
      );
    }

    input[type='checkbox'] + .clr-control-label::before {
      @include mixins.css-var(
        background-color,
        clr-forms-checkbox-disabled-background-color,
        forms-variables.$clr-forms-checkbox-disabled-background-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-color,
        clr-forms-checkbox-disabled-border-color,
        forms-variables.$clr-forms-checkbox-disabled-background-color,
        variables.$clr-use-custom-properties
      );
    }

    input[type='checkbox']:checked + .clr-control-label::before {
      @include mixins.css-var(
        background-color,
        clr-forms-checkbox-disabled-checked-background-color,
        forms-variables.$clr-forms-checkbox-disabled-background-color,
        variables.$clr-use-custom-properties
      );
      border: none;
    }

    input[type='checkbox']:checked + .clr-control-label::after {
      @include mixins.css-var(
        border-color,
        clr-forms-checkbox-disabled-mark-color,
        forms-variables.$clr-forms-checkbox-disabled-mark-color,
        variables.$clr-use-custom-properties
      );
    }

    input[type='checkbox'].clr-indeterminate + .clr-control-label::after,
    input[type='checkbox']:indeterminate + .clr-control-label::after {
      @include mixins.css-var(
        border-color,
        clr-forms-checkbox-disabled-indeterminate-color,
        forms-variables.$clr-forms-checkbox-disabled-mark-color,
        variables.$clr-use-custom-properties
      );
      border-left: none;
    }
  }

  .clr-form-compact .clr-checkbox-wrapper {
    @include forms-mixins.form-flatten-compact-adjustments();
    @include forms-mixins.form-inline-input();
    height: forms-variables.$clr-forms-baseline * 4;

    .clr-control-label {
      margin-top: 0;
    }
  }
}
