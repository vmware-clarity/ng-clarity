/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:map';
@use 'sass:meta';
@use '../utils/mixins';
@use '../utils/variables/variables';
@use 'variables.card' as card-variables;
@include meta.load-css('properties.card');

@include mixins.exports('card.clarity') {
  %card-border-appearance {
    @include mixins.css-var(
      box-shadow,
      clr-card-box-shadow,
      card-variables.$clr-card-box-shadow,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-radius,
      clr-card-border-radius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-card-border-width,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-card-border-color,
      card-variables.$clr-card-border-color,
      variables.$clr-use-custom-properties
    );
  }

  %clickable-card-transition {
    @include mixins.css-var(
      box-shadow,
      clr-card-clickable-box-shadow,
      0 variables.$clr_baselineRem_0_125 0 0 variables.$clr-color-action-500,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-card-clickable-border-width,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-card-clickable-border-color,
      variables.$clr-color-action-500,
      variables.$clr-use-custom-properties
    );
    cursor: pointer;
    text-decoration: none;
    transition: border 0.2s ease, transform 0.2s ease;
  }

  %card-space-between {
    margin-top: 0;
    @include mixins.css-var(
      margin-bottom,
      clr-card-children-space-between,
      card-variables.$card-children-space-between,
      variables.$clr-use-custom-properties
    );

    &:last-child {
      margin-bottom: 0;
    }
  }

  //Responsive Card Images
  %card-image-appearance {
    display: block;
    height: auto;
    width: 100%;
    max-width: 100%;
  }

  //TODO: Try to reduce the nesting in .card
  .card {
    position: relative;
    display: block;
    @include mixins.css-var(
      background-color,
      clr-card-bg-color,
      card-variables.$clr-card-bg-color,
      variables.$clr-use-custom-properties
    );
    width: 100%;
    margin-top: variables.$clr_baselineRem_1;
    @extend %card-border-appearance;

    .btn-link {
      min-width: 0;

      //NOTE: Set left and right padding of link buttons to 0. aligning these buttons
      //without removing the paddings is a huge task and leads to a brittle card css
      //plus the alignment doesn't work in all the cases
      padding: 0;
    }

    //Clickable Cards
    &.clickable {
      color: inherit;

      &:hover {
        @extend %clickable-card-transition;
      }
    }

    .card-title,
    .card-text,
    .card-media-block,
    .list,
    .list-unstyled {
      @extend %card-space-between;
    }

    //Clarity Lists
    & > .list,
    & > .list-unstyled {
      padding: card-variables.$card-children-padding-vertical card-variables.$card-children-padding-horizontal;
    }

    .list-group {
      padding-left: 0;
      margin-bottom: 0;
      list-style: none;
    }

    .list-group-item {
      @include mixins.css-var(
        font-size,
        clr-card-text-font-size,
        card-variables.$clr-card-text-font-size,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        padding,
        clr-card-list-group-item-padding,
        variables.$clr_baselineRem_0_5 variables.$clr_baselineRem_0_75,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        background-color,
        clr-card-bg-color,
        card-variables.$clr-card-bg-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-bottom-width,
        clr-card-border-width,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      border-bottom-style: solid;
      @include mixins.css-var(
        border-bottom-color,
        clr-card-border-color,
        card-variables.$clr-card-border-color,
        variables.$clr-use-custom-properties
      );
    }

    //Dropdowns

    //NOTE: This is a fix just for dropdowns in Cards in Edge.
    //TODO: Figure out why the caret sign is not aligned next to the dropdown toggle only in cards
    @include mixins.fixForMsEdge() {
      .dropdown > .dropdown-toggle::after {
        display: inline-block;
        margin-top: -1 * variables.$clr_baselineRem_0_5;
      }
    }
  }

  .card-block {
    @include mixins.css-var(
      padding,
      clr-card-block-padding,
      card-variables.$card-children-padding-vertical card-variables.$card-children-padding-horizontal,
      variables.$clr-use-custom-properties
    );
  }

  .card-footer {
    display: flex;
    flex-direction: row;
    @include mixins.css-var(
      gap,
      clr-card-footer-gap,
      variables.$clr_baselineRem_0_5,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      padding,
      clr-card-footer-padding,
      card-variables.$card-children-padding-vertical card-variables.$card-children-padding-horizontal,
      variables.$clr-use-custom-properties
    );
  }

  h3.card-header,
  .card-header {
    @include mixins.css-var(
      font-size,
      clr-card-header-title-font-size,
      card-variables.$clr-card-title-font-size,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      padding,
      clr-card-header-padding,
      card-variables.$card-children-padding-vertical card-variables.$card-children-padding-horizontal,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      color,
      clr-card-header-title-color,
      card-variables.$clr-card-title-color,
      variables.$clr-use-custom-properties
    );
  }

  h4.card-title,
  .card-title {
    @include mixins.css-var(
      color,
      clr-card-content-title-color,
      card-variables.$clr-card-title-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-size,
      clr-card-content-title-font-size,
      card-variables.$clr-card-title-font-size,
      variables.$clr-use-custom-properties
    );
  }

  .card-header,
  .card-title {
    @include mixins.css-var(
      font-weight,
      clr-card-title-font-weight,
      card-variables.$clr-card-title-font-weight,
      variables.$clr-use-custom-properties
    );
    letter-spacing: card-variables.$clr-card-title-letter-spacing;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    &.card-header,
    &.card-title {
      margin-top: 0; // removes default margin from clr-ui typography styles
    }
  }

  .card-text {
    @include mixins.css-var(
      font-size,
      clr-card-text-font-size,
      card-variables.$clr-card-text-font-size,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(color, clr-card-text-color, variables.$clr-p1-color, variables.$clr-use-custom-properties);
  }

  //Images
  .card-img {
    &:first-child > img {
      border-radius: 0;
      @include mixins.css-var(
        border-top-left-radius,
        clr-card-border-radius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-top-right-radius,
        clr-card-border-radius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
    }

    &:last-child > img {
      border-radius: 0;
      @include mixins.css-var(
        border-bottom-left-radius,
        clr-card-border-radius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-bottom-right-radius,
        clr-card-border-radius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
    }

    & > img {
      @extend %card-image-appearance;
    }
  }

  //Card with just an image
  .card.card-img,
  .card > .card-img:first-child:last-child {
    & > img {
      @include mixins.css-var(
        border-radius,
        clr-card-border-radius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      @extend %card-image-appearance;
    }
  }

  .card-block,
  .card-footer {
    .btn,
    .btn.btn-link,
    .card-link {
      margin: 0;
    }

    //Need this level of nesting for now.
    //Adding a TODO to remove the nesting in a separate PR
    //Don't want to create a PR which solves multiple different issues.
    .btn-group .btn {
      margin: 0;
    }
  }

  .card-header,
  .card-block {
    @include mixins.css-var(
      border-bottom-width,
      clr-card-border-width,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-bottom-style: solid;
    @include mixins.css-var(
      border-bottom-color,
      clr-card-border-color,
      card-variables.$clr-card-border-color,
      variables.$clr-use-custom-properties
    );

    &:last-child {
      border-bottom: none;
    }
  }

  //Use border-bottom directly on card header and card block to simplify the layout
  //Card dividers should only be used inside of a .card-block
  .card-divider {
    display: block;
    @include mixins.css-var(
      border-bottom-width,
      clr-card-border-width,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-bottom-style: solid;
    @include mixins.css-var(
      border-bottom-color,
      clr-card-divider-color,
      card-variables.$clr-card-divider-color,
      variables.$clr-use-custom-properties
    );
  }

  .card-block {
    .card-divider {
      @extend %card-space-between;
      margin-left: -1 * (card-variables.$card-children-padding-horizontal);
      margin-right: -1 * (card-variables.$card-children-padding-horizontal);
      width: auto;
    }
  }

  //Hide card dividers and just show the border bottom of card-header and card-block
  .card-header,
  .card-block {
    & + .card-divider {
      display: none;
    }
  }

  //Card Media Block
  .card-media-block {
    display: flex;

    .card-media-image {
      $clr-card-media-image-size: variables.$clr_baselineRem_2_5;
      display: inline-block; //to make sure IE11 respects the max-height and max-width
      flex: 0 0 auto;
      @include mixins.max-equilateral($clr-card-media-image-size);
    }

    .card-media-description {
      display: flex;
      flex-direction: column;
      @include mixins.css-var(
        color,
        clr-card-text-color,
        variables.$clr-p1-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        font-size,
        clr-card-text-font-size,
        variables.$clr_baselineRem_0_5,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        margin-left,
        clr-card-media-description-margin-left,
        variables.$clr_baselineRem_0_5,
        variables.$clr-use-custom-properties
      );
    }

    .card-media-title {
      display: inline-block;
    }

    span,
    .card-media-text {
      display: inline-block;
    }

    &.wrap {
      flex-direction: column;

      .card-media-description {
        margin-left: 0;
        @include mixins.css-var(
          margin-top,
          clr-card-media-description-margin-top,
          variables.$clr_baselineRem_0_25,
          variables.$clr-use-custom-properties
        );
      }
    }
  }

  .card-block {
    & > .list,
    & > .list-unstyled {
      padding: 0;
    }
  }

  //Credit: Bootstrap 4 Card Masonry
  //Added some fixes to avoid flickering in Clickable cards
  //Added extra column classes to control the number of CSS columns
  @media screen and (min-width: map.get(variables.$clr-grid-breakpoints, sm)) {
    .card-columns {
      column-count: 3;
      column-gap: variables.$clr_baselineRem_0_5;
      break-inside: avoid;
      column-fill: balance;

      //Note: Safari Bug Fix for CSS Columns
      //http://stackoverflow.com/a/34998087/3538394
      -webkit-perspective: 1;

      &.card-columns-2 {
        column-count: 2;
      }

      &.card-columns-4 {
        column-count: 4;
      }

      .card {
        display: inline-block; //For some weird reason stops the cards from getting cut off between 2 columns
        margin: variables.$clr_baselineRem_0_25;
      }

      .clickable {
        //To fix the flickering issue with clickable card transition
        //http://stackoverflow.com/questions/3461441/prevent-flicker-on-webkit-transition-of-webkit-transform
        backface-visibility: hidden;
      }
    }
  }

  @include mixins.fixForMsEdge {
    // Edge did NOT like using display inline-table for button-groups inside of cards...
    .card {
      .checkbox,
      .checkbox-inline,
      .radio,
      .radio-inline {
        &.btn label {
          display: inline-block;
        }
      }
    }
  }
}
