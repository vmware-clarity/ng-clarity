/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use 'sass:map';
@use 'sass:meta';
@use '../../image/icons.clarity';
@use '../../utils/mixins';
@use '../../utils/variables/variables';
@use '../main-container/variables.header' as header-variables;
@use '@cds/core/tokens/tokens.scss';

@mixin header-section-divider() {
  display: inline-block;
  position: absolute;
  content: '';
  background-color: header-variables.$clr-header-divider-color;
  height: header-variables.$clr-header-divider-height;
  width: header-variables.$clr-header-divider-width;
  top: tokens.$cds-global-space-6;
  left: 0;
}

@mixin header-nav-appearance() {
  color: header-variables.$clr-header-font-color;

  &:hover {
    color: header-variables.$clr-header-font-color-hover;
  }

  &:disabled {
    cursor: not-allowed;
  }
}

@mixin header-backgrounds() {
  &.header-1 {
    background-color: header-variables.$clr-header-bg-color;
  }

  &.header-2 {
    background-color: header-variables.$clr-header-2-bg-color;
  }

  &.header-3 {
    background-color: header-variables.$clr-header-3-bg-color;
  }

  &.header-4 {
    background-color: header-variables.$clr-header-4-bg-color;
  }

  &.header-5 {
    background-color: header-variables.$clr-header-5-bg-color;
  }

  &.header-6 {
    background-color: header-variables.$clr-header-6-bg-color;
  }

  &.header-7 {
    background-color: header-variables.$clr-header-7-bg-color;
  }

  // dark theme only header added by external team to workaround lack of header-7 in dark theme
  &.header-8 {
    background-color: header-variables.$clr-header-8-bg-color;
  }
}

@mixin header-branding() {
  .branding {
    display: flex;
    flex: 0 0 auto;
    min-width: header-variables.$clr-header-branding-min-width;
    padding: header-variables.$clr-header-branding-padding;
    height: header-variables.$clr-header-height;

    & > a,
    & > .nav-link {
      display: inline-flex;
      align-items: center;
      height: header-variables.$clr-header-height;
      text-decoration: none;

      &:focus {
        outline-offset: header-variables.$clr-header-outline-offset; // So that the outline styles aren't hidden because of the browser
      }
    }

    .clr-icon,
    cds-icon,
    clr-icon {
      flex-grow: 0;
      flex-shrink: 0;
      @include mixins.equilateral(header-variables.$clr-header-branding-logo-size);
      margin-right: header-variables.$clr-header-branding-icon-gap;
    }

    .title {
      color: header-variables.$clr-header-title-color;
      font-family: header-variables.$clr-header-title-font-family;
      @include mixins.generate-typography-token(
        'SUBSECTION-16-EXP',
        (
          font-weight: header-variables.$clr-header-title-font-weight,
          font-size: header-variables.$clr-header-title-font-size,
          letter-spacing: header-variables.$clr-header-title-letter-spacing,
          line-height: header-variables.$clr-header-title-line-height,
        )
      );
      text-decoration: none;
    }
  }
}

@mixin header-links {
  .settings, /* TODO: deprecated. Remove when the clarity css naming convention is implemented.*/
  .header-nav,
  .header-actions {
    height: header-variables.$clr-header-height;

    .nav-text {
      @include mixins.generate-typography-token('BODY-14-RG-EXP');
    }

    clr-icon {
      color: header-variables.$clr-header-font-color;
    }

    .nav-icon {
      @include mixins.equilateral(header-variables.$clr-header-height);
    }

    .nav-link {
      display: inline-flex;
      align-items: center;
      height: header-variables.$clr-header-height;
      position: relative;
      text-align: center;
      padding: header-variables.$clr-header-nav-link-padding;
      line-height: header-variables.$clr-header-nav-link-line-height;
      text-decoration: none;
      @include header-nav-appearance();

      cds-icon,
      clr-icon {
        position: static;
        top: 50%;
        left: 50%;
        @include mixins.equilateral(header-variables.$clr-header-clarity-icons-size);
      }

      &.nav-icon-text {
        cds-icon,
        clr-icon {
          position: relative;
          top: auto;
          left: auto;
          transform: none;
          margin-left: tokens.$cds-global-space-9;
        }

        .nav-text {
          margin-left: 0;
          padding-left: tokens.$cds-global-space-4;
        }
      }

      // .nav-text acts like the alt attribute for screens where responsiveness kicks in.
      // on smaller screens icons are hidden and only nav-text is shown
      .nav-icon + .nav-text {
        display: none;
      }

      font-size: header-variables.$clr-header-nav-link-font-size;

      &.active {
        .nav-text {
          @include mixins.generate-typography-token('BODY-14-SB-EXP');
        }
      }

      &:focus {
        outline-offset: header-variables.$clr-header-outline-offset; // So that the outline styles aren't hidden because of the browser
      }
    }
  }
}

@mixin header-nav {
  .header-nav {
    display: flex;
    flex: 0 0 auto;

    @media screen and (min-width: map.get(variables.$clr-grid-breakpoints, lg)) {
      a:first-of-type::before,
      a:last-of-type::after {
        @include header-section-divider();
        left: auto;
      }
    }

    &:last-child {
      & > .nav-link:last-child::after {
        content: none;
      }
    }

    .nav-link {
      &:first-of-type,
      &:last-of-type {
        position: relative;
      }

      &:first-of-type::before {
        left: 0;
      }

      &:last-of-type::after {
        right: 0;
      }

      &.active:first-of-type::before,
      &.active:last-of-type::after {
        content: none;
      }
    }
  }
}

@mixin header-actions {
  .settings,
  .header-actions {
    flex: 1 0 auto;
    display: flex;
    justify-content: flex-end;

    // Reduce nesting from 5 to 3 at the most
    & > .dropdown {
      $clr-header-action-caret-icon-right-position: tokens.$cds-global-space-6;

      & > .dropdown-toggle {
        position: relative;
        line-height: header-variables.$clr-header-height;
        height: header-variables.$clr-header-height;
        outline-offset: header-variables.$clr-header-outline-offset;
        @include header-nav-appearance();
      }

      .dropdown-toggle.nav-icon {
        cds-icon:not([shape^='angle']),
        clr-icon:not([shape^='angle']) {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          @include mixins.equilateral(header-variables.$clr-header-action-icon-size);
          right: header-variables.$clr-header-action-cog-right;
        }
      }

      .dropdown-toggle.nav-icon {
        cds-icon[shape^='angle'],
        clr-icon[shape^='angle'] {
          right: header-variables.$clr-header-action-caret-right;
          top: 38%;
          @include mixins.equilateral(header-variables.$clr-header-action-caret-size);
        }
      }

      .dropdown-toggle.nav-text {
        padding: 0 tokens.$cds-global-space-11 0 header-variables.$clr-header-nav-text-horizontal-padding;

        cds-icon[shape^='angle'],
        clr-icon[shape^='angle'] {
          right: header-variables.$clr-header-action-caret-right;
          @include mixins.equilateral(header-variables.$clr-header-action-caret-size);
        }
      }

      .dropdown-toggle.nav-icon {
        width: calc(
          header-variables.$clr-header-action-cog-right + header-variables.$clr-header-action-icon-size +
            tokens.$cds-global-space-7
        );
        padding-right: 0;
      }

      // Pull the dropdown menus of all dropdowns up to compensate for the height of the header.
      &.bottom-right > .dropdown-menu,
      &.bottom-left > .dropdown-menu {
        top: 85%;
      }

      // Last Dropdown Menu adjustments so that the menu has some space between itself and the right end of the browser window
      &:last-child.bottom-right > .dropdown-menu {
        right: mixins.baselinePx(3);
      }

      // Pull the dropdown menus of all dropdowns up to compensate for the height of the header.
      .dropdown-menu {
        margin-top: calc(-1 * tokens.$cds-global-space-3);
        // TODO: As of 0.10.0 the dropdown-menu inside header without clrIfOpen directive (legacy)
        // will create empty space beyond the .main-container if the right isn't set to zero.
        // Re-evaluate later if we can come up with a better solution.
        left: auto;
        right: 0;
      }

      // Last Dropdown Menu adjustments so that the menu has some space between itself and the right end of the browser window
      :last-child.dropdown-menu {
        margin-right: tokens.$cds-global-space-5;
      }
    }
  }
}

@mixin header-search() {
  .search-box,
  .search {
    display: flex;
    align-items: center;
    flex: 0 0 auto;
    max-width: mixins.baselinePx(288);
    padding: 0;
    height: header-variables.$clr-header-height;
    @include header-nav-appearance();

    & > .nav-icon {
      margin: 0 tokens.$cds-global-space-4 mixins.baselinePx(3) tokens.$cds-global-space-9;
    }

    label {
      display: inline-block;
      height: header-variables.$clr-header-height;
      line-height: header-variables.$clr-header-height;
      padding-left: header-variables.$clr-header-search-gap;
      margin-left: header-variables.$clr-header-search-margin-left;
      margin-right: header-variables.$clr-header-search-margin-right;
      text-align: center;

      &::before {
        display: inline-block;
        content: '';
        background-image: icons.generateSearchIcon();
        background-repeat: no-repeat;
        background-size: contain;
        cursor: pointer;
        @include mixins.min-equilateral(header-variables.$clr-header-search-icon-size);
        vertical-align: middle;
        margin: 0;
        margin-right: calc(
          -1 * (header-variables.$clr-header-search-icon-size + header-variables.$clr-header-search-gap)
        );
      }

      input {
        line-height: tokens.$cds-global-space-9;
        margin: auto;
      }
    }

    input[type='text'] {
      border: none;
      background: none;
      color: header-variables.$clr-header-search-input-font-color;
      border-radius: tokens.$cds-alias-object-border-radius-100;
      height: header-variables.$clr-header-search-height;

      padding: 0;
      padding-left: calc(header-variables.$clr-header-search-icon-size + 2 * header-variables.$clr-header-search-gap);

      vertical-align: middle;

      // Typography
      @include mixins.generate-typography-token('BODY-14-SB-EXP');

      &::placeholder {
        color: header-variables.$clr-header-search-placeholder-text-color;
        @include mixins.generate-typography-token('BODY-14-RG-EXP');
      }

      &:hover {
        border: header-variables.$clr-header-search-border-hover;
      }

      &:focus-visible {
        outline: none;
        border: header-variables.$clr-header-search-border-active;
      }

      &:focus,
      &:active {
        background: none;
      }
    }
  }

  .branding + .search,
  .branding + .search-box {
    position: relative;

    &::after {
      @include header-section-divider();
    }
  }
}

@mixin header-search-md {
  .search-box,
  .search {
    flex: 1 0 auto;
    justify-content: flex-end;
    max-width: none;

    label {
      padding: 0;
      width: header-variables.$clr-header-height;

      &::before {
        left: calc((header-variables.$clr-header-height - header-variables.$clr-search-icon-width) * 0.5);
      }

      input {
        display: none; // TODO: Waiting for UX to finish the search designs.
      }
    }
  }
}

@mixin header-branding-md {
  .branding + .search,
  .branding + .search-box {
    &::after {
      content: none;
    }
  }
}

@mixin header-actions-md {
  // If actions directly follow search
  .search-box + .settings,
  .search-box + .header-actions,
  .search + .settings,
  .search + .header-actions {
    position: relative;
    flex: 0 0 auto;

    &::after {
      @include header-section-divider();
    }
  }
}

@include meta.load-css('../main-container/properties.header');

@include mixins.exports('header.clarity') {
  // TODO: rename to follow clr naming convention
  header,
  .header {
    display: flex;
    color: header-variables.$clr-header-font-color;
    background-color: header-variables.$clr-header-bg-color;
    height: header-variables.$clr-header-height;
    white-space: nowrap;

    @include header-backgrounds();
    @include header-branding();
    @include header-links();
    @include header-nav();
    @include header-actions();
    @include header-search();
  }

  @media screen and (max-width: map.get(variables.$clr-grid-breakpoints, md)) {
    header,
    .header {
      @include header-search-md();
      @include header-branding-md();
      @include header-actions-md();
    }
  }
}
