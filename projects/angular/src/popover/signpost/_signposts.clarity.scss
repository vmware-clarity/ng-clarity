/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:map';
@use 'sass:meta';
@use '../../utils/mixins';
@use 'properties.signpost';
@use '../../utils/variables/variables.global';
@use '../../utils/variables/variables.color' as color-variables;
@use 'variables.signpost' as signpost-variables;
@include meta.load-css('properties.signpost');

@include mixins.exports('signpost.clarity') {
  .signpost {
    display: inline-block;

    &:hover {
      cursor: pointer;
    }

    .signpost-action {
      // ATM (after token migration)
      // to be removed once shim is fully integrated.
      @include mixins.css-var(
        min-width,
        clr-signpost-action-icon-dimension,
        variables.$clr_baselineRem_1,
        variables.$clr-use-custom-properties
      );

      margin: 0;
      padding: 0;
      @include mixins.css-var(
        color,
        clr-signpost-action-color,
        signpost-variables.$clr-signpost-action-color,
        variables.$clr-use-custom-properties
      );

      cds-icon,
      clr-icon {
        // ATM (after token migration)
        // to be removed once shim is fully integrated.
        @include mixins.equilateral-var(
          clr-signpost-action-icon-dimension,
          variables.$clr_baselineRem_1,
          variables.$clr-use-custom-properties
        );

        @include mixins.css-var(
          color,
          clr-signpost-action-icon-color,
          signpost-variables.$clr-signpost-action-color,
          variables.$clr-use-custom-properties
        );
      }

      cds-icon:hover,
      clr-icon:hover,
      &:hover {
        @include mixins.css-var(
          color,
          clr-signpost-action-hover-color,
          signpost-variables.$clr-signpost-action-hover-color,
          variables.$clr-use-custom-properties
        );
      }

      &.active cds-icon,
      &.active clr-icon,
      &.active {
        @include mixins.css-var(
          color,
          clr-signpost-action-active-color,
          signpost-variables.$clr-signpost-action-hover-color,
          variables.$clr-use-custom-properties
        );
      }
    }

    .signpost-content-header button {
      @include mixins.css-var(
        line-height,
        clr-signpost-content-close-button-line-height,
        inherit,
        variables.$clr-use-custom-properties
      );

      @include mixins.min-equilateral-var(clr-signpost-content-close-button-dimensions, variables.$clr_baselineRem_1);

      cds-icon,
      clr-icon {
        @include mixins.min-equilateral-var(
          clr-signpost-content-close-icon-dimensions,
          variables.$clr_baselineRem_0_667
        );
      }
    }
  }

  .signpost-trigger {
    margin: 0;
    padding: 0;
    display: inline-block;
  }

  .signpost-content {
    background-color: transparent;
    min-width: variables.$clr_baselineRem_9;
    max-width: variables.$clr_baselineRem_15;
    min-height: variables.$clr_baselineRem_2;
    max-height: variables.$clr_baselineRem_21;
    display: inline-block;
    position: relative;
    z-index: map.get(variables.$clr-layers, tooltips);

    &:hover {
      cursor: default;
    }

    .popover-pointer {
      @include mixins.equilateral(0);
      position: absolute;

      &:before {
        content: '';
        @include mixins.equilateral(0);
        position: absolute;
      }
    }

    /***
            The signpost is above the icon top-{HORIZONTAL_POSITION}
        */
    /***
            TODO: Create a general mix-in for the popover-pointer that can
            1. Accomadate all 12 positions
            2. Unification for the nomenclature between components
                (if possible, I know they all use slightly different terms)
            3. Be used across Tooltips, Signposts (Do we also want it for Dropdowns)
            4. What's up with the namespacing here? Usually we use `clr-*` to denote
                Clarity components but we aren't doing that in signposts. We should
                consider it.
         */

    /* NOTE: signposts need precise pixels for some measurements due to the design
            Hence the 1px and 2px values you'll see below.

            I've tested the calcs below while resizing the base font-size for the rem
            measurements and they appear to hold up well.
          */

    &.top-left,
    &.top-middle,
    &.top-right {
      .popover-pointer {
        @include mixins.css-var(
          border-top,
          clr-signpost-pointer-border,
          signpost-variables.$clr-signpost-pointer-border,
          variables.$clr-use-custom-properties
        );

        bottom: -1 * signpost-variables.$clr-signpost-border-size;

        &:before {
          @include mixins.css-var(
            border-top,
            clr-signpost-pointer-psuedo-border,
            signpost-variables.$clr-signpost-pointer-psuedo-border,
            variables.$clr-use-custom-properties
          );

          bottom: variables.$clr_baselineRem_2px;
        }
      }
    }

    &.top-left {
      .signpost-wrap {
        border-bottom-right-radius: 0; // Turn off rounded corner here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-left,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        right: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-left,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          right: variables.$clr_baselineRem_1px;
        }
      }
    }

    &.top-middle {
      .popover-pointer {
        @include mixins.css-var(
          border-right,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        left: 50%;

        &:before {
          @include mixins.css-var(
            border-right,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );
          left: variables.$clr_baselineRem_1px;
        }
      }
    }

    &.top-right {
      .signpost-wrap {
        border-bottom-left-radius: 0; // Turn off rounded corner here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-right,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );
        left: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-right,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );
          left: variables.$clr_baselineRem_1px;
        }
      }
    }
    // End top-*

    /***
             The signpost is below the icon top-{HORIZONTAL_POSITION}
         */

    &.bottom-left,
    &.bottom-middle,
    &.bottom-right {
      .popover-pointer {
        @include mixins.css-var(
          border-bottom,
          clr-signpost-pointer-border,
          signpost-variables.$clr-signpost-pointer-border,
          variables.$clr-use-custom-properties
        );
        top: -1 * signpost-variables.$clr-signpost-border-size + variables.$clr_baselineRem_1px;

        &:before {
          @include mixins.css-var(
            border-bottom,
            clr-signpost-pointer-psuedo-border,
            signpost-variables.$clr-signpost-pointer-psuedo-border,
            variables.$clr-use-custom-properties
          );

          top: variables.$clr_baselineRem_2px;
        }
      }
    }

    &.bottom-left {
      .signpost-wrap {
        border-top-right-radius: 0; // Turn off rounded corners here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-left,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        right: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-left,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          right: variables.$clr_baselineRem_1px;
        }
      }
    }

    &.bottom-middle {
      .popover-pointer {
        @include mixins.css-var(
          border-right,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        right: 50%;

        &:before {
          @include mixins.css-var(
            border-right,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          right: -1 * signpost-variables.$clr-signpost-border-size - variables.$clr_baselineRem_1px;
        }
      }
    }

    &.bottom-right {
      .signpost-wrap {
        border-top-left-radius: 0; // Turn off rounded corners here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-right,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        left: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-right,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          left: variables.$clr_baselineRem_1px;
        }
      }
    }
    // End bottom-*

    /***
             The signpost is on the left side of the icon left-{VERTICAL_POSITION}
          */

    &.left-top,
    &.left-middle,
    &.left-bottom {
      .popover-pointer {
        @include mixins.css-var(
          border-left,
          clr-signpost-pointer-border,
          signpost-variables.$clr-signpost-pointer-border,
          variables.$clr-use-custom-properties
        );

        right: -1 * signpost-variables.$clr-signpost-border-size;

        &:before {
          @include mixins.css-var(
            border-left,
            clr-signpost-pointer-psuedo-border,
            signpost-variables.$clr-signpost-pointer-psuedo-border,
            variables.$clr-use-custom-properties
          );
        }
      }
    }

    &.left-top {
      .signpost-wrap {
        border-bottom-right-radius: 0; // Turn off rounded corners here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-top,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        bottom: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-top,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: -1 * signpost-variables.$clr-signpost-border-size - variables.$clr_baselineRem_1px;
          right: variables.$clr_baselineRem_2px;
        }
      }
    }

    &.left-middle {
      .popover-pointer {
        @include mixins.css-var(
          border-bottom,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        top: 50%;
        transform: translateY(-50%);

        &:before {
          @include mixins.css-var(
            border-bottom,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: variables.$clr_baselineRem_1px;
          left: -1 * signpost-variables.$clr-signpost-border-size - variables.$clr_baselineRem_2px;
        }
      }
    }

    &.left-bottom {
      .signpost-wrap {
        border-top-right-radius: 0; // Turn off rounded corners here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-bottom,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        top: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-bottom,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: variables.$clr_baselineRem_1px;
          left: -1 * signpost-variables.$clr-signpost-border-size - variables.$clr_baselineRem_2px;
        }
      }
    }
    // End left-*

    /***
             The signpost is on the right side of the icon right-{VERTICAL_POSITION}
         */

    &.right-top,
    &.right-middle,
    &.right-bottom {
      .popover-pointer {
        @include mixins.css-var(
          border-right,
          clr-signpost-pointer-border,
          signpost-variables.$clr-signpost-pointer-border,
          variables.$clr-use-custom-properties
        );

        left: -1 * signpost-variables.$clr-signpost-border-size;

        &:before {
          @include mixins.css-var(
            border-right,
            clr-signpost-pointer-psuedo-border,
            signpost-variables.$clr-signpost-pointer-psuedo-border,
            variables.$clr-use-custom-properties
          );

          left: variables.$clr_baselineRem_2px;
        }
      }
    }

    &.right-top {
      .signpost-wrap {
        border-bottom-left-radius: 0; // turn off rounded corner here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-top,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        bottom: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-top,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: -1 * signpost-variables.$clr-signpost-border-size - variables.$clr_baselineRem_1px;
        }
      }
    }

    &.right-middle {
      .popover-pointer {
        @include mixins.css-var(
          border-bottom,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        top: 50%;
        transform: translateY(-50%);

        &:before {
          @include mixins.css-var(
            border-bottom,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: variables.$clr_baselineRem_1px;
        }
      }
    }

    &.right-bottom {
      .signpost-wrap {
        border-top-left-radius: 0; // turn off rounded corner here
      }

      .popover-pointer {
        @include mixins.css-var(
          border-bottom,
          clr-signpost-pointer-invisible-border,
          signpost-variables.$clr-signpost-pointer-invisible-border,
          variables.$clr-use-custom-properties
        );

        top: (-1 * variables.$clr_baselineRem_1px);

        &:before {
          @include mixins.css-var(
            border-bottom,
            clr-signpost-pointer-invisible-border,
            signpost-variables.$clr-signpost-pointer-invisible-border,
            variables.$clr-use-custom-properties
          );

          top: variables.$clr_baselineRem_1px;
        }
      }
    }
    // End right-*
  }

  .signpost-content-header {
    display: flex;
    justify-content: flex-end;
    width: 100%;
    background-color: inherit;
    top: 0;
    @include mixins.css-var(
      position,
      clr-signpost-content-header-position,
      absolute,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(padding, clr-signpost-content-header-padding, 0, variables.$clr-use-custom-properties);
    @include mixins.css-var(
      border-radius,
      clr-signpost-border-radius,
      signpost-variables.$clr-signpost-border-radius,
      variables.$clr-use-custom-properties
    );
  }

  .signpost-wrap {
    @include mixins.css-var(
      border-radius,
      clr-signpost-border-radius,
      signpost-variables.$clr-signpost-border-radius,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-signpost-content-border-color,
      signpost-variables.$clr-signpost-content-border-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      background-color,
      clr-signpost-content-bg-color,
      signpost-variables.$clr-signpost-content-bg-color,
      variables.$clr-use-custom-properties
    );
    z-index: map.get(variables.$clr-layers, tooltips);
    position: relative;
  }

  .signpost-content-body {
    @include mixins.css-var(
      padding,
      clr-signpost-content-padding,
      variables.$clr_baselineRem_1,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      color,
      clr-signpost-content-color,
      color-variables.$clr-color-neutral-700,
      variables.$clr-use-custom-properties
    );

    text-align: left;
    max-height: variables.$clr_baselineRem_20;
    overflow-y: auto;
  }
}
