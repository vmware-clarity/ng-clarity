/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use '../../image/icons.clarity';
@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use 'variables.spinner' as spinner-variables;

@include mixins.exports('spinner.clarity') {
  .spinner {
    // spinner-lg is the default
    position: relative;
    display: inline-block;
    @include mixins.min-equilateral-var(
      clr-spinner-default-size,
      variables.$clr_baselineRem_3,
      variables.$clr-use-custom-properties
    );
    animation: spin 1s linear infinite;
    // TODO: Add variable
    margin-right: var(--clr-spinner-spacing-to-text);
    padding: 0;
    text-indent: 100%;
    overflow: hidden;
    white-space: nowrap;

    &::after {
      content: '';
      @include mixins.min-equilateral-var(
        clr-spinner-default-size,
        variables.$clr_baselineRem_3,
        variables.$clr-use-custom-properties
      );
      position: absolute;
      top: 0;
      left: 0;
      clip-path: ellipse(100% 53.5% at 0 0);
      @include mixins.css-var(
        border-width,
        clr-spinner-default-stroke-width,
        variables.$clr_baselineRem_0_25,
        variables.$clr-use-custom-properties
      );
      border-style: solid;
      border-color: var(--clr-spinner-fill-snake-color, spinner-variables.$clr-spinner-color);
      border-right-color: transparent !important;
      border-bottom-color: transparent !important;
      border-radius: 50%;
    }

    &::before {
      content: '';
      @include mixins.min-equilateral-var(
        clr-spinner-default-size,
        variables.$clr_baselineRem_3,
        variables.$clr-use-custom-properties
      );
      position: absolute;
      top: 0;
      left: 0;
      @include mixins.css-var(
        border-width,
        clr-spinner-default-stroke-width,
        variables.$clr_baselineRem_0_25,
        variables.$clr-use-custom-properties
      );
      border-style: solid;
      border-color: var(--clr-spinner-fill-bg-color);
      border-radius: 50%;
    }

    &.spinner-md {
      &::after,
      &::before {
        @include mixins.min-equilateral-var(
          clr-spinner-medium-size,
          variables.$clr_baselineRem_1_5,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-width,
          clr-spinner-medium-stroke-width,
          variables.$clr_baselineRem_0_125,
          variables.$clr-use-custom-properties
        );
      }
      @include mixins.min-equilateral-var(
        clr-spinner-medium-size,
        variables.$clr_baselineRem_1_5,
        variables.$clr-use-custom-properties
      );
    }

    &.spinner-inline,
    &.spinner-sm {
      &::after,
      &::before {
        @include mixins.min-equilateral-var(
          clr-spinner-small-size,
          variables.$clr_baselineRem_0_75,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-width,
          clr-spinner-small-stroke-width,
          variables.$clr_baselineRem_0_1,
          variables.$clr-use-custom-properties
        );
      }
      @include mixins.min-equilateral-var(
        clr-spinner-small-size,
        variables.$clr_baselineRem_0_75,
        variables.$clr-use-custom-properties
      );
    }

    &.spinner-inline {
      vertical-align: text-bottom; //To align with text properly
    }

    &.spinner-inverse {
      // TODO: get ux input on direction here
      &::after {
        border-color: var(--clr-spinner-fill-inverse-snake-color, spinner-variables.$clr-spinner-inverse-color);
      }
      &::before {
        border-color: var(--clr-spinner-fill-inverse-bg-color);
      }
    }

    &.spinner-neutral-0 {
      // needed for loading banner alerts in core
      &::after {
        border-color: var(--clr-spinner-fill-snake-color, spinner-variables.$clr-spinner-color);
      }
      &::before {
        border-color: rgba(transparent, 1);
      }
    }

    &.spinner-check {
      animation: none;
      &::after,
      &::before {
        border: none;
      }
      background: icons.generateCheckIcon(spinner-variables.$clr-spinner-color);
    }
  }

  //Spinners inside of small buttons
  .btn-sm {
    .spinner {
      @include mixins.min-equilateral-var(
        clr-spinner-inside-small-button-size,
        variables.$clr_baselineRem_0_5416,
        variables.$clr-use-custom-properties
      );
    }
  }

  .btn-icon:not(.btn-sm) {
    .spinner {
      @include mixins.min-equilateral-var(
        clr-spinner-inside-button-size,
        variables.$clr_baselineRem_0_65,
        variables.$clr-use-custom-properties
      );
    }
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
