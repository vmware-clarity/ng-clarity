/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use '../../image/icons.clarity';
@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use 'variables.spinner' as spinner-variables;

@include mixins.exports('spinner.clarity') {
  .spinner {
    // spinner-lg is the default
    position: relative;
    display: inline-block;
    //@include mixins.min-equilateral(variables.$clr_baselineRem_4);
    animation: spin 1s linear infinite;
    //margin: 0 var(--clr-spinner-circle-label-spacing, spinner-variables.$clr-spinner-spinner-label-distance) 0 0;
    margin: 0 0 0 0;
    padding: 0;

    text-indent: 100%;
    overflow: hidden;
    white-space: nowrap;
    border-radius: 50%;
    border: 5px solid;
    border-color: rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity);
    box-sizing: border-box;

    font-size: 20px;
    @include mixins.min-equilateral(3.6em);

    background-size: 100% 100%, 50% 50%, 50% 50%, 50% 50%, 50% 50%;
    background-repeat: no-repeat;
    background-image: linear-gradient(var(--clr-global-app-background), var(--clr-global-app-background)),
      linear-gradient(
        10deg,
        spinner-variables.$clr-spinner-color 100%,
        rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 0%
      ),
      linear-gradient(
        110deg,
        rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 100%,
        rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 30%
      ),
      linear-gradient(
        311deg,
        rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 44%,
        spinner-variables.$clr-spinner-color 0%
      ),
      linear-gradient(
        120deg,
        rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 100%,
        spinner-variables.$clr-spinner-bg-color 100%
      );
    background-position: center center, left top, right top, left bottom, right bottom;
    background-origin: content-box, border-box, border-box, border-box, border-box;
    background-clip: content-box, border-box, border-box, border-box, border-box;

    &.spinner-md {
      border-width: 3px;
      text-indent: variables.$clr_baselineRem_1_5;
      @include mixins.min-equilateral(variables.$clr_baselineRem_1_5);
    }

    &.spinner-inline,
    &.spinner-sm {
      border-width: 2.5px;
      //text-indent: variables.$clr_baselineRem_0_75;
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_75);
    }

    &.spinner-inline {
      //vertical-align: text-bottom; //To align with text properly
      //padding-left: 50px !important;
    }

    &.spinner-inverse {
      // TODO: get ux input on direction here
      border-color: rgba(spinner-variables.$clr-spinner-inverse-bg-color, spinner-variables.$clr-spinner-opacity);

      background-image: linear-gradient(var(--clr-global-app-background), var(--clr-global-app-background)),
        linear-gradient(
          10deg,
          spinner-variables.$clr-spinner-color 100%,
          rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 0%
        ),
        linear-gradient(
          110deg,
          rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 100%,
          rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 30%
        ),
        linear-gradient(
          311deg,
          rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 44%,
          spinner-variables.$clr-spinner-color 0%
        ),
        linear-gradient(
          120deg,
          rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity) 100%,
          spinner-variables.$clr-spinner-bg-color 100%
        );
    }

    &.spinner-neutral-0 {
      // needed for loading banner alerts in core
      // TODO: Remove this if possible
      background: icons.generateSpinnerIcon(transparent, #ffffff, 1);
    }

    &.spinner-check {
      animation: none;
      background: icons.generateCheckIcon(spinner-variables.$clr-spinner-color);
    }
  }

  //Spinners inside of small buttons
  .btn-sm {
    .spinner {
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_5416);
    }
  }

  .btn-icon:not(.btn-sm) {
    .spinner {
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_65);
    }
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
