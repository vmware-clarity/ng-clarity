/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use 'sass:meta';
@use '../utils/mixins';
@use '../utils/variables/variables.global';
@use 'variables.timeline' as timeline-variables;
@include meta.load-css('properties.timeline');

@include mixins.exports('timeline.clarity') {
  .clr-timeline {
    display: flex;
    padding: timeline-variables.$clr-timeline-padding-width;
  }

  .clr-timeline-step {
    display: flex;
    flex-direction: column;
    width: 100%;
    min-width: timeline-variables.$clr-timeline-step-min-width;
    @include mixins.css-var(
      margin-left,
      clr-timeline-step-margin,
      timeline-variables.$clr-timeline-gutter-width,
      variables.$clr-use-custom-properties
    );

    cds-icon,
    clr-icon {
      @include mixins.min-equilateral-var(
        clr-timeline-icon-size,
        timeline-variables.$clr-timeline-icon-size,
        variables.$clr-use-custom-properties
      );
    }

    cds-icon[shape='circle'],
    clr-icon[shape='circle'] {
      @include mixins.css-var(
        color,
        clr-timeline-incomplete-step-color,
        timeline-variables.$clr-timeline-incomplete-step-color,
        variables.$clr-use-custom-properties
      );
    }

    cds-icon[shape='dot-circle'],
    clr-icon[shape='dot-circle'] {
      @include mixins.css-var(
        color,
        clr-timeline-current-step-color,
        timeline-variables.$clr-timeline-current-step-color,
        variables.$clr-use-custom-properties
      );
    }

    cds-icon[shape='success-standard'],
    clr-icon[shape='success-standard'] {
      @include mixins.css-var(
        color,
        clr-timeline-success-step-color,
        timeline-variables.$clr-timeline-success-step-color,
        variables.$clr-use-custom-properties
      );
    }

    cds-icon[shape='error-standard'],
    clr-icon[shape='error-standard'] {
      @include mixins.css-var(
        color,
        clr-timeline-error-step-color,
        timeline-variables.$clr-timeline-error-step-color,
        variables.$clr-use-custom-properties
      );
    }

    // style for the connecting line between icons
    &:not(:last-of-type) .clr-timeline-step-body::before {
      content: '';
      @include mixins.css-var(
        background,
        clr-timeline-line-color,
        timeline-variables.$clr-timeline-line-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        height,
        clr-timeline-line-width,
        timeline-variables.$clr-timeline-line-thickness,
        variables.$clr-use-custom-properties
      );

      @include mixins.css-var(
        width,
        clr-timeline-horizontal-line-length,
        calc(
          100% - #{0.5 * timeline-variables.$clr-timeline-icon-size} - #{timeline-variables.$clr-timeline-icon-inner-padding}
        ),
        variables.$clr-use-custom-properties
      );

      transform: translate(
        timeline-variables.$clr-timeline-icon-size - timeline-variables.$clr-timeline-icon-inner-padding,
        -0.5 * (timeline-variables.$clr-timeline-line-thickness + timeline-variables.$clr-timeline-icon-size)
      );
    }
  }

  // Note: headers (timestamps) are unable to auto-adjust height based on their siblings' using pure CSS.
  // Hence forcing them in one-line by using "nowrap".
  .clr-timeline-step-header {
    white-space: nowrap;
    @include mixins.css-var(
      color,
      clr-timeline-step-header-color,
      timeline-variables.$clr-timeline-step-header-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-weight,
      clr-timeline-step-header-font-weight,
      inherit,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-size,
      clr-timeline-step-header-font-size,
      timeline-variables.$clr-timeline-step-header-font-size,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      line-height,
      clr-timeline-step-header-line-height,
      timeline-variables.$clr-timeline-step-header-line-height,
      variables.$clr-use-custom-properties
    );

    @include mixins.css-var(
      margin-bottom,
      clr-timeline-step-internal-margin,
      timeline-variables.$clr-timeline-step-header-padding-bottom,
      variables.$clr-use-custom-properties
    );
  }

  .clr-timeline-step-body {
    display: flex;
    flex-direction: column;
    cds-icon,
    clr-icon {
      @include mixins.equilateral(timeline-variables.$clr-timeline-default-icon-size);
      min-width: initial;
      min-height: initial;
      &[shape='circle'],
      &[shape='dot-circle'],
      &[shape='success-standard'],
      &[shape='error-standard'] {
        color: inherit;
      }
    }
  }

  .clr-timeline-step-title {
    @include mixins.css-var(
      color,
      clr-timeline-step-title-color,
      timeline-variables.$clr-timeline-step-title-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-size,
      clr-timeline-step-title-font-size,
      timeline-variables.$clr-timeline-step-title-font-size,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      line-height,
      clr-timeline-step-title-line-height,
      timeline-variables.$clr-timeline-step-title-line-height,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-weight,
      clr-timeline-step-title-font-weight,
      timeline-variables.$clr-timeline-step-title-font-weight,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      margin-top,
      clr-timeline-step-internal-margin,
      timeline-variables.$clr-timeline-step-title-padding-top,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      margin-bottom,
      clr-timeline-step-internal-margin,
      timeline-variables.$clr-timeline-step-title-padding-bottom,
      variables.$clr-use-custom-properties
    );
  }

  .clr-timeline-step-description {
    @include mixins.css-var(
      color,
      clr-timeline-step-description-color,
      timeline-variables.$clr-timeline-step-description-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-weight,
      clr-timeline-step-description-font-weight,
      inherit,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      font-size,
      clr-timeline-step-description-font-size,
      timeline-variables.$clr-timeline-step-description-font-size,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      line-height,
      clr-timeline-step-description-line-height,
      timeline-variables.$clr-timeline-step-description-line-height,
      variables.$clr-use-custom-properties
    );
    button {
      display: block;
      @include mixins.css-var(
        margin-top,
        clr-timeline-step-internal-margin,
        timeline-variables.$clr-timeline-step-description-button-top-margin,
        variables.$clr-use-custom-properties
      );
    }
    img {
      width: 100%;
      margin-top: timeline-variables.$clr-timeline-step-description-img-top-margin;
    }
  }

  .clr-timeline.clr-timeline-vertical {
    flex-direction: column;
    min-width: timeline-variables.$clr-timeline-vertical-min-width;

    .clr-timeline-step {
      flex-direction: row;
      margin-left: 0;
      position: relative; // required for vertical line to get 100% height of step body it belongs to

      &:not(:last-of-type) {
        @include mixins.css-var(
          margin-bottom,
          clr-timeline-step-internal-margin,
          timeline-variables.$clr-timeline-vertical-gutter-width,
          variables.$clr-use-custom-properties
        );
      }

      // style for the connecting line between icons
      &:not(:last-of-type) .clr-timeline-step-body::before {
        position: absolute;
        @include mixins.css-var(
          width,
          clr-timeline-line-width,
          timeline-variables.$clr-timeline-line-thickness,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          height,
          clr-timeline-vertical-line-length,
          calc(100% + #{2 * timeline-variables.$clr-timeline-icon-inner-padding}),
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          transform,
          clr-timeline-vertical-line-position,
          translate(
            -0.5 * (timeline-variables.$clr-timeline-icon-size - timeline-variables.$clr-timeline-line-thickness) - timeline-variables.$clr-timeline-icon-inner-padding -
              timeline-variables.$clr-timeline-vertical-step-body-left-padding,
            timeline-variables.$clr-timeline-icon-size - timeline-variables.$clr-timeline-icon-inner-padding -
              timeline-variables.$clr-timeline-vertical-step-body-top-padding
          ),
          variables.$clr-use-custom-properties
        );
      }
    }

    .clr-timeline-step-header {
      text-align: right;
      white-space: normal;
      word-break: break-word;
      width: timeline-variables.$clr-timeline-vertical-step-header-min-width;
      min-width: timeline-variables.$clr-timeline-vertical-step-header-min-width;
      margin-bottom: 0;
      @include mixins.css-var(
        margin-right,
        clr-timeline-step-internal-margin,
        timeline-variables.$clr-timeline-vertical-step-header-right-padding,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        margin-top,
        clr-timeline-step-internal-margin,
        timeline-variables.$clr-timeline-vertical-step-header-top-padding,
        variables.$clr-use-custom-properties
      );
    }

    .clr-timeline-step-title {
      @include mixins.css-var(margin-top, clr-timeline-step-internal-margin, 0, variables.$clr-use-custom-properties);
    }

    .clr-timeline-step-body {
      display: flex;
      flex-direction: column;
      min-width: timeline-variables.$clr-timeline-vertical-step-min-width;

      // ATM (after token migration)
      // remove this margin calculation and clr-timeline-vertical-step-body-margin property.
      // margin-top must be 0.
      @include mixins.css-var(
        margin,
        clr-timeline-vertical-step-body-margin,
        timeline-variables.$clr-timeline-vertical-step-body-top-padding 0 0
          timeline-variables.$clr-timeline-vertical-step-body-left-padding,
        variables.$clr-use-custom-properties
      );
      // replace it with
      //margin-top: 0;
      //@include mixins.css-var(
      //    margin-left,
      //    clr-timeline-step-internal-margin,
      //    timeline-variables.$clr-timeline-vertical-step-body-left-padding,
      //    variables.$clr-use-custom-properties
      //);
    }
  }
}
