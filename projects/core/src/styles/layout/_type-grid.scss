/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@mixin generateColumnsAndRows($breakpoint: null) {
  @for $i from 1 through $cds-global-layout-grid-cols-static {
    // implicit columns/rows
    [#{$layout}*='#{$cols}#{$breakpoint}:#{$i}'] > * {
      grid-column: span $i / span $i;
    }

    [#{$layout}*='#{$rows}#{$breakpoint}:#{$i}'] > * {
      grid-row: span $i / span $i;
    }
  }
}

@mixin generateExplicitColumnAndRow($breakpoint: null) {
  @for $i from 1 through $cds-global-layout-grid-cols-static {
    // explicit column/row positions
    [#{$layout}*='#{$col}#{$breakpoint}:#{$i}'] {
      grid-column: span $i / span $i !important;
    }

    [#{$layout}*='#{$row}#{$breakpoint}:#{$i}'] {
      grid-row: span $i / span $i !important;
    }
  }
}

@mixin generatePositions($breakpoint: null) {
  // +1 for grid cols/rows which end at beginning of next item
  @for $i from 1 through $cds-global-layout-grid-cols-static + 1 {
    [#{$layout}*='#{$col}#{$breakpoint}:start-#{$i}'] {
      grid-column-start: $i !important;
    }

    [#{$layout}*='#{$col}#{$breakpoint}:end-#{$i}'] {
      grid-column-end: $i !important;
    }

    [#{$layout}*='#{$row}#{$breakpoint}:start-#{$i}'] {
      grid-row-start: $i !important;
    }

    [#{$layout}*='#{$row}#{$breakpoint}:end-#{$i}'] {
      grid-row-end: $i !important;
    }
  }
}

@mixin generateAlignments($breakpoint: null) {
  [#{$layout}~='#{$grid}'] {
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$top}'] {
      align-content: start;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$right}'] {
      justify-content: end;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$bottom}'] {
      align-content: end;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$left}'] {
      justify-content: start;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-stretch}'] {
      align-items: stretch;
      align-content: stretch;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-stretch}'] {
      justify-items: stretch;
      justify-content: stretch;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}'] {
      align-items: stretch;
      align-content: stretch;
      justify-items: stretch;
      justify-content: stretch;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-center}'] {
      align-items: center;
      align-content: center;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-center}'] {
      justify-items: center;
      justify-content: center;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$center}'] {
      align-items: center;
      align-content: center;
      justify-items: center;
      justify-content: center;
    }
  }
}

[#{$layout}~='#{$grid}'] {
  display: grid;
  align-items: start;
  align-content: start;
  grid-template-columns: repeat($cds-global-layout-grid-cols, 1fr);
  width: 100%;

  &[#{$layout}*='#{$rows}'] {
    grid-template-rows: repeat(12, auto);
  }

  & > [#{$layout}*='#{$row}'] {
    align-self: stretch;
  }

  &[#{$layout}*='#{$cols}:auto'] {
    grid-auto-flow: column;
    grid-template-columns: initial;
  }
}

[#{$layout}*='#{$cols}\@'] > * {
  grid-column: span $cds-global-layout-grid-cols;
}

[#{$layout}*='#{$col}\@'] {
  grid-column: span 12;
}

@include generateColumnsAndRows();
@include generateExplicitColumnAndRow();
@include generatePositions();
@include generateAlignments();

@each $breakpoint, $breakpoint-value in $cds-layout-breakpoints {
  @media (min-width: $breakpoint-value) {
    @include generateColumnsAndRows($breakpoint);
  }
}

@each $breakpoint, $breakpoint-value in $cds-layout-breakpoints {
  @media (min-width: $breakpoint-value) {
    @include generateExplicitColumnAndRow($breakpoint);
  }
}

@each $breakpoint, $breakpoint-value in $cds-layout-breakpoints {
  @media (min-width: $breakpoint-value) {
    @include generatePositions($breakpoint);
  }
}

@each $breakpoint, $breakpoint-value in $cds-layout-breakpoints {
  @media (min-width: $breakpoint-value) {
    @include generateAlignments($breakpoint);
  }
}
